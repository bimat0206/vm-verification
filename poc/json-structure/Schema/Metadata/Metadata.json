//Metadata.json Schema (Images Category)
{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "Image Processing Metadata",
    "type": "object",
    "required": [
      "verificationId",
      "verificationType",
      "referenceImage",
      "checkingImage",
      "processingMetadata"
    ],
    "properties": {
      "verificationId": {
        "type": "string",
        "pattern": "^verif-[0-9]{8}-[0-9]{6}[0-9]{3}$",
        "description": "Verification ID this image metadata belongs to"
      },
      "verificationType": {
        "type": "string",
        "enum": ["LAYOUT_VS_CHECKING", "PREVIOUS_VS_CURRENT"],
        "description": "Type of verification being performed"
      },
      "referenceImage": {
        "type": "object",
        "required": ["originalMetadata", "base64Metadata", "storageMetadata"],
        "properties": {
          "originalMetadata": {
            "type": "object",
            "required": ["sourceUrl", "contentType", "originalSize"],
            "properties": {
              "sourceUrl": {
                "type": "string",
                "pattern": "^s3://[a-z0-9.-]+/.*",
                "description": "Original S3 URL of the reference image"
              },
              "sourceBucket": {
                "type": "string",
                "description": "Source S3 bucket name"
              },
              "sourceKey": {
                "type": "string",
                "description": "Source S3 key path"
              },
              "contentType": {
                "type": "string",
                "enum": ["image/jpeg", "image/jpg", "image/png", "image/webp"],
                "description": "MIME type of the original image"
              },
              "originalSize": {
                "type": "integer",
                "minimum": 0,
                "description": "Original file size in bytes"
              },
              "lastModified": {
                "type": ["string", "null"],
                "format": "date-time",
                "description": "Last modified timestamp from S3"
              },
              "etag": {
                "type": ["string", "null"],
                "description": "ETag from original S3 object"
              },
              "imageDimensions": {
                "type": ["object", "null"],
                "properties": {
                  "width": {"type": "integer", "minimum": 1},
                  "height": {"type": "integer", "minimum": 1},
                  "aspectRatio": {"type": "number", "minimum": 0}
                }
              }
            }
          },
          "base64Metadata": {
            "type": "object",
            "required": ["encodedSize", "encodingTimestamp"],
            "properties": {
              "encodedSize": {
                "type": "integer",
                "minimum": 0,
                "description": "Size of Base64 encoded data in bytes"
              },
              "compressionRatio": {
                "type": ["number", "null"],
                "minimum": 0,
                "description": "Compression ratio applied during encoding (if any)"
              },
              "encodingTimestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when Base64 encoding was performed"
              },
              "encodingMethod": {
                "type": "string",
                "enum": ["standard_base64", "url_safe_base64"],
                "default": "standard_base64",
                "description": "Base64 encoding method used"
              },
              "qualitySettings": {
                "type": ["object", "null"],
                "properties": {
                  "jpegQuality": {"type": "integer", "minimum": 1, "maximum": 100},
                  "pngCompression": {"type": "integer", "minimum": 0, "maximum": 9},
                  "optimized": {"type": "boolean", "default": false}
                }
              }
            }
          },
          "storageMetadata": {
            "type": "object",
            "required": [ "bucket", "key"],
            "properties": {
              "bucket": {
                "type": "string",
                "description": "S3 bucket where Base64 data is stored"
              },
              "key": {
                "type": "string",
                "description": "S3 key for Base64 data storage"
              },
              "etag": {
                "type": ["string", "null"],
                "description": "ETag of stored Base64 object"
              },
              "storedSize": {
                "type": ["integer", "null"],
                "minimum": 0,
                "description": "Actual size of stored S3 object"
              },
              "storageClass": {
                "type": "string",
                "enum": ["STANDARD", "STANDARD_IA", "GLACIER"],
                "default": "STANDARD",
                "description": "S3 storage class used"
              },
              "encryption": {
                "type": ["object", "null"],
                "properties": {
                  "method": {"type": "string", "enum": ["SSE-S3", "SSE-KMS"]},
                  "keyId": {"type": ["string", "null"]}
                }
              }
            }
          },
          "imageType": {
            "type": "string",
            "description": "Type/purpose of this image in verification context"
          },
          "validation": {
            "type": "object",
            "properties": {
              "isValid": {
                "type": "boolean",
                "description": "Whether image passed validation checks"
              },
              "validationErrors": {
                "type": "array",
                "items": {"type": "string"},
                "description": "List of validation errors if any"
              },
              "bedrockCompatible": {
                "type": "boolean",
                "description": "Whether image is compatible with Bedrock processing"
              },
              "sizeWithinLimits": {
                "type": "boolean",
                "description": "Whether encoded size is within acceptable limits"
              }
            }
          }
        }
      },
      "checkingImage": {
        "type": "object",
        "required": ["originalMetadata", "base64Metadata", "storageMetadata"],
        "properties": {
          "originalMetadata": {
            "type": "object",
            "required": ["sourceUrl", "contentType", "originalSize"],
            "properties": {
              "sourceUrl": {
                "type": "string",
                "pattern": "^s3://[a-z0-9.-]+/.*",
                "description": "Original S3 URL of the checking image"
              },
              "sourceBucket": {
                "type": "string",
                "description": "Source S3 bucket name"
              },
              "sourceKey": {
                "type": "string",
                "description": "Source S3 key path"
              },
              "contentType": {
                "type": "string",
                "enum": ["image/jpeg", "image/jpg", "image/png", "image/webp"],
                "description": "MIME type of the original image"
              },
              "originalSize": {
                "type": "integer",
                "minimum": 0,
                "description": "Original file size in bytes"
              },
              "lastModified": {
                "type": ["string", "null"],
                "format": "date-time",
                "description": "Last modified timestamp from S3"
              },
              "etag": {
                "type": ["string", "null"],
                "description": "ETag from original S3 object"
              },
              "imageDimensions": {
                "type": ["object", "null"],
                "properties": {
                  "width": {"type": "integer", "minimum": 1},
                  "height": {"type": "integer", "minimum": 1},
                  "aspectRatio": {"type": "number", "minimum": 0}
                }
              }
            }
          },
          "base64Metadata": {
            "type": "object",
            "required": ["encodedSize", "encodingTimestamp"],
            "properties": {
              "encodedSize": {
                "type": "integer",
                "minimum": 0,
                "description": "Size of Base64 encoded data in bytes"
              },
              "compressionRatio": {
                "type": ["number", "null"],
                "minimum": 0,
                "description": "Compression ratio applied during encoding (if any)"
              },
              "encodingTimestamp": {
                "type": "string",
                "format": "date-time",
                "description": "Timestamp when Base64 encoding was performed"
              },
              "encodingMethod": {
                "type": "string",
                "enum": ["standard_base64", "url_safe_base64"],
                "default": "standard_base64",
                "description": "Base64 encoding method used"
              },
              "qualitySettings": {
                "type": ["object", "null"],
                "properties": {
                  "jpegQuality": {"type": "integer", "minimum": 1, "maximum": 100},
                  "pngCompression": {"type": "integer", "minimum": 0, "maximum": 9},
                  "optimized": {"type": "boolean", "default": false}
                }
              }
            }
          },
          "storageMetadata": {
            "type": "object",
            "required": [ "bucket", "key"],
            "properties": {
              "bucket": {
                "type": "string",
                "description": "S3 bucket where Base64 data is stored"
              },
              "key": {
                "type": "string",
                "description": "S3 key for Base64 data storage"
              },
              "etag": {
                "type": ["string", "null"],
                "description": "ETag of stored Base64 object"
              },
              "storedSize": {
                "type": ["integer", "null"],
                "minimum": 0,
                "description": "Actual size of stored S3 object"
              },
              "storageClass": {
                "type": "string",
                "enum": ["STANDARD", "STANDARD_IA", "GLACIER"],
                "default": "STANDARD",
                "description": "S3 storage class used"
              },
              "encryption": {
                "type": ["object", "null"],
                "properties": {
                  "method": {"type": "string", "enum": ["SSE-S3", "SSE-KMS"]},
                  "keyId": {"type": ["string", "null"]}
                }
              }
            }
          },
          "imageType": {
            "type": "string",
            "description": "Type/purpose of this image in verification context"
          },
          "validation": {
            "type": "object",
            "properties": {
              "isValid": {
                "type": "boolean",
                "description": "Whether image passed validation checks"
              },
              "validationErrors": {
                "type": "array",
                "items": {"type": "string"},
                "description": "List of validation errors if any"
              },
              "bedrockCompatible": {
                "type": "boolean",
                "description": "Whether image is compatible with Bedrock processing"
              },
              "sizeWithinLimits": {
                "type": "boolean",
                "description": "Whether encoded size is within acceptable limits"
              }
            }
          }
        }
      },
      "processingMetadata": {
        "type": "object",
        "required": ["processedAt", "processingTimeMs", "totalImagesProcessed"],
        "properties": {
          "processedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when image processing was completed"
          },
          "processingTimeMs": {
            "type": "integer",
            "minimum": 0,
            "description": "Total time taken for image processing in milliseconds"
          },
          "totalImagesProcessed": {
            "type": "integer",
            "minimum": 1,
            "maximum": 2,
            "description": "Number of images processed (1 or 2)"
          },
          "processingSteps": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "IMAGE_DOWNLOAD",
                "IMAGE_VALIDATION",
                "BASE64_ENCODING",
                "S3_STORAGE",
                "METADATA_EXTRACTION",
                "QUALITY_OPTIMIZATION"
              ]
            },
            "description": "List of processing steps completed"
          },
          "parallelProcessing": {
            "type": "boolean",
            "default": true,
            "description": "Whether images were processed in parallel"
          },
      "version": {
        "type": "string",
        "default": "1.0",
        "description": "Schema version for this image metadata"
      }
    },
    "allOf": [
      {
        "if": {
          "properties": {
            "verificationType": {"const": "LAYOUT_VS_CHECKING"}
          }
        },
        "then": {
          "properties": {
            "referenceImage": {
              "properties": {
                "imageType": {"const": "layout_reference"}
              }
            },
            "checkingImage": {
              "properties": {
                "imageType": {"const": "current_checking"}
              }
            }
          }
        }
      },
      {
        "if": {
          "properties": {
            "verificationType": {"const": "PREVIOUS_VS_CURRENT"}
          }
        },
        "then": {
          "properties": {
            "referenceImage": {
              "properties": {
                "imageType": {"const": "previous_checking"}
              }
            },
            "checkingImage": {
              "properties": {
                "imageType": {"const": "current_checking"}
              }
            }
          }
        }
      }
    ]
  }