{
  "Comment": "Vending Machine Verification - S3 State Management Architecture v2.0",
  "StartAt": "InitializeVerification",
  "States": {
    "InitializeVerification": {
      "Type": "Task",
      "Resource": "${function_arns["initialize"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationContext.$": "$.verificationContext"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "ServiceException", "ThrottlingException"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "Next": "CheckVerificationType"
    },

    "CheckVerificationType": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.verificationContext.verificationType",
          "StringEquals": "LAYOUT_VS_CHECKING",
          "Next": "FetchImages"
        },
        {
          "Variable": "$.verificationContext.verificationType",
          "StringEquals": "PREVIOUS_VS_CURRENT",
          "Next": "FetchHistoricalVerification"
        }
      ],
      "Default": "HandleInvalidVerificationType"
    },

    "FetchHistoricalVerification": {
      "Type": "Task",
      "Resource": "${function_arns["fetch_historical_verification"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "status.$": "$.status",
        "verificationContext.$": "$.verificationContext",
        "s3References.$": "$.s3References"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "ServiceException", "ThrottlingException"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "Next": "FetchImages"
    },

    "FetchImages": {
      "Type": "Task",
      "Resource": "${function_arns["fetch_images"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "s3References.$": "$.s3References",
        "status.$": "$.status",
        "verificationContext.$": "$.verificationContext"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "ServiceException", "ThrottlingException"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "Next": "PrepareSystemPrompt"
    },

    "PrepareSystemPrompt": {
      "Type": "Task",
      "Resource": "${function_arns["prepare_system_prompt"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "status.$": "$.status",
        "s3References.$": "$.s3References"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "ServiceException", "ThrottlingException"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "Next": "ExecuteTurn1Combined"
    },

    "ExecuteTurn1Combined": {
      "Type": "Task",
      "Resource": "${function_arns["execute_turn1_combined"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "status.$": "$.status",
        "s3References.$": "$.s3References"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["ServiceException", "ThrottlingException"],
          "IntervalSeconds": 3,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "Next": "ExecuteTurn2Combined"
    },

    "ExecuteTurn2Combined": {
      "Type": "Task",
      "Resource": "${function_arns["execute_turn2_combined"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "status.$": "$.status",
        "s3References.$": "$.s3References"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["ServiceException", "ThrottlingException"],
          "IntervalSeconds": 3,
          "MaxAttempts": 5,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "Next": "FinalizeAndStoreResults"
    },

    "FinalizeAndStoreResults": {
      "Type": "Task",
      "Resource": "${function_arns["finalize_results"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "status.$": "$.status",
        "s3References.$": "$.s3References"
      },
      "ResultPath": "$",
      "OutputPath": "$",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed", "ServiceException", "ThrottlingException"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 2.0
        }
      ],
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "ResultPath": "$.error",
          "Next": "FinalizeWithError"
        }
      ],
      "End": true
    },

    "HandleInvalidVerificationType": {
      "Type": "Pass",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "status": "FAILED",
        "error": {
          "errorType": "InvalidVerificationTypeException",
          "errorMessage": "Invalid verificationType. Must be LAYOUT_VS_CHECKING or PREVIOUS_VS_CURRENT.",
          "errorCode": "INVALID_VERIFICATION_TYPE",
          "timestamp.$": "$.State.EnteredTime"
        }
      },
      "End": true
    },

    "FinalizeWithError": {
      "Type": "Task",
      "Resource": "${function_arns["finalize_with_error"]}",
      "Parameters": {
        "schemaVersion": "2.1.0",
        "verificationId.$": "$.verificationId",
        "error.$": "$.error"
      },
      "ResultPath": "$",
      "End": true
    }
  }
}
